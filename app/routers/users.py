# Code Generated by Sidekick is for learning and experimentation purposes only.
from fastapi import APIRouter, Depends, HTTPException
from sqlalchemy.orm import Session
from .. import crud, schemas
from ..database import get_db
from app.schemas.schemas import UserCreate, UserResponse
from app.services.user_service import UserService

router = APIRouter()

@router.post("/register/")
def register_user(user: schemas.UserCreate, db: Session = Depends(get_db)):
    db_user = crud.get_user(db, user.username)
    if db_user:
        raise HTTPException(status_code=400, detail="Username already registered")
    return crud.create_user(db, user)

@router.get("/profile", response_model=UserResponse)
async def get_user_profile(user_id: int, user: UserResponse = Depends(UserService.get_current_user)):
    user_profile = await UserService.get_user_by_id(user_id)
    if not user_profile:
        raise HTTPException(status_code=404, detail="User not found")
    return user_profile