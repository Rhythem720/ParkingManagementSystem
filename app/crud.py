# Code Generated by Sidekick is for learning and experimentation purposes only.
from sqlalchemy.orm import Session
from .import models, schemas, auth

def get_user(db: Session, username: str):
    """Retrieve a user by username."""
    return db.query(models.User).filter(models.User.username == username).first()

def create_user(db: Session, user: schemas.UserCreate):
    """Create a new user."""
    hashed_password = auth.get_password_hash(user.password)
    db_user = models.User(username=user.username, email=user.email, hashed_password=hashed_password, role=user.role)
    db.add(db_user)
    db.commit()
    db.refresh(db_user)
    return db_user

def get_parking_slot(db: Session, slot_id: int):
    """Retrieve a parking slot by ID."""
    return db.query(models.ParkingSlot).filter(models.ParkingSlot.id == slot_id).first()

def create_parking_slot(db: Session, slot: schemas.ParkingSlotCreate):
    """Create a new parking slot."""
    db_slot = models.ParkingSlot(id=slot.id, label=slot.label, status=slot.status)
    db.add(db_slot)
    db.commit()
    db.refresh(db_slot)
    return db_slot


def create_booking(db: Session, booking: schemas.BookingCreate):
    db_booking = models.Booking(**booking.dict())
    db.add(db_booking)
    db.commit()
    db.refresh(db_booking)
    return db_booking

def get_booking(db: Session, booking_id: int):
    return db.query(models.Booking).filter(models.Booking.id == booking_id).first()

def create_feedback(db: Session, feedback: schemas.FeedbackCreate):
    db_feedback = models.Feedback(**feedback.dict())
    db.add(db_feedback)
    db.commit()
    db.refresh(db_feedback)
    return db_feedback

def get_feedback(db: Session, feedback_id: int):
    return db.query(models.Feedback).filter(models.Feedback.id == feedback_id).first()
